version: '3'

services:

  jira:
    image: atlassian/jira-core:9.4.4
    # Using Core of jira, you cant then select Software or / and Service Manage when you set the license.
    volumes:
     - jira1-volume:/var/atlassian/application-data/jira
#    ports:
#     - "8080:8080"
    depends_on:
     - postgres
     - pgadmin
     - grafana
     - prometheus
     - nodered
    environment:
     - ATL_PROXY_NAME=jira.internal
     - ATL_PROXY_PORT=80
     - ATL_TOMCAT_SCHEME=http
     - JVM_MAXIMUM_MEMORY=3g
#    - SET_PERMISSIONS=false
     - SET_PERMISSIONS=true
     - CLUSTERED=true
     - JIRA_NODE_ID=jira-node1
     - JIRA_SHARED_HOME=/var/atlassian/application-data/jira/shared

  postgres:
#    container_name: ${DOCKER_ENV_NAME}-postgres
    image: postgres:14
    volumes:
     - postgres1-volume:/var/lib/postgresql/data
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=Incorrect

# docker run -d -p 5432:5432 ghusta/postgres-world-db:2.4
# Handy in Database Picker Country Picker.
# https://docs.adaptavist.com/sr4js/latest/features/script-fields/built-in-script-fields/database-picker/database-picker-examples/database-picker-country-picker
# jdbc:postgresql://world-db:5432/world-db
  world-db:
    image: ghusta/postgres-world-db:2.4
#    ports:
#     - "5555:5432"
    environment:
     - DEBUG=true
     - enable-dtrace=true
     - log_statement='all'
     - log_directory='pg_log'
     - log_filename='postgresql-%Y-%m-%d_%H%M%S.log'
     - logging_collector=on

  pgadmin:
    image: dpage/pgadmin4:latest
    volumes:
     - pgadmin1-volume:/var/lib/pgadmin
 #   ports:
 #    - "5050:5050"
    depends_on:
     - postgres
    environment:
     - SERVER_PROXY_NAME=pgadmin.internal
     - SERVER_PROXY_PORT=80
     - PGADMIN_LISTEN_PORT=5050
     - SERVER_SCHEME=http
     - PGADMIN_DEFAULT_EMAIL=pgadmin@pgadmin.internal
     - PGADMIN_DEFAULT_PASSWORD=Incorrect

  nodered:
    volumes:
     - nodered1-volume:/data
    image: nodered/node-red:latest-minimal
#    ports:
#    - "1880:1880"

  grafana:
    image: grafana/grafana
    # first login, use: admin, pw: admin
    volumes:
      - grafana1data-volume:/var/lib/grafana
      - grafana1conf-volume:/etc/grafana
#    ports:
#      - "3000:3000"

  prometheus:
    image: bitnami/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus1-volume:/prometheus
    command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    - '--web.enable-admin-api'
    - '--web.enable-lifecycle'
#    ports:
#     - "9090:9090"

# Can analyse pictures
# deepstack:
#   image: deepquestai/deepstack:latest
#   environment:
#    - VISION-DETECTION=True
#    - VISION-FACE=True
#    - VISION-SCENE=True
#    - MODE=High
#    ports:
#     - "5000:5000"

  haproxy:
    image: haproxy:latest
    volumes:
    - ./haproxy:/usr/local/etc/haproxy
    - ./haproxy/503.http:/etc/haproxy/errors/503.http
    - ./haproxy/haproxy.pem:/etc/haproxy/certs/haproxy.pem
    depends_on:
    - jira
    - prometheus
    - grafana
    - nodered
    - pgadmin
    ports:
    - "80:80"
    - "443:443"
    networks:
      default:
        aliases:
          - jira.internal
          - prometheus.internal
          - grafana.internal
          - nodered.internal
          - pgadmin.internal

volumes:
    nodered1-volume:
    jira1-volume:
    pgadmin1-volume:
    postgres1-volume:
    prometheus1-volume:
    grafana1conf-volume:
    grafana1data-volume:
    jira1-volume-extra:

